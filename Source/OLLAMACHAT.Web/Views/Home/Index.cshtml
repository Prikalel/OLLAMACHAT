@model VelikiyPrikalel.OLLAMACHAT.Web.Views.Home.Index

@{
    Layout = "_Layout";
    ViewData["Title"] = "Chat1";
}

<div class="chat-container">
    <div class="model-selector">
        <label>Model:</label>
        <select id="model-select">
        @foreach (var availableModel in Model.AvailableModels)
        {
            <option value="@availableModel">@availableModel</option>
        }
        </select>
    </div>

    <div id="chat-display"></div>

    <div id="input-area">
        <textarea id="message-input" rows="3" placeholder="Type your message here..."></textarea>
        <button id="send-button">Send</button>
    </div>
</div>

@section Scripts {
    <script>
        let activeRequestId = null;
        let activeImageRequestId = null;

        function appendMessage(role, content, isImage = false) {
            const chatDisplay = $('#chat-display');
            const messageClass = role === 'user' ? 'user-message' : 'ai-message';
            const prefix = role === 'user' ? 'You:' : 'AI:';

            if (isImage) {
                const imgUrl = `/static/images/${content}`;
                const imgHtml = `<div class="message ${messageClass}">
                    <strong>${prefix}</strong><br>
                    <img class="chat-image" src="${imgUrl}">
                </div>`;
                chatDisplay.append(imgHtml);
            } else {
                const messageHtml = `<div class="message ${messageClass}">
                    <strong>${prefix}</strong> <span style="color: #e0e0e0;">${content}</span>
                </div>`;
                chatDisplay.append(messageHtml);
            }

            chatDisplay.scrollTop(chatDisplay[0].scrollHeight);
        }

        function showThinking() {
            const chatDisplay = $('#chat-display');
            chatDisplay.append(
                `<div class="message ai-message thinking">
                    <strong>AI:</strong> Thinking...
                </div>`
            );
            chatDisplay.scrollTop(chatDisplay[0].scrollHeight);
        }

        $('#send-button').click(async () => {
            const message = $('#message-input').val().trim();
            if (!message) return;

            // Clear input
            $('#message-input').val('');

            // Add user message
            appendMessage('user', message);

            if (message.startsWith('/img')) {
                showThinking();
                const response = await fetch("/send_message", {
                    method: "POST",
                    headers: {"Content-Type": "application/json"},
                    body: JSON.stringify({message: message})
                });
                const data = await response.json();
                activeImageRequestId = data.request_id;
                pollImageResponse();
            } else {
                showThinking();
                const response = await fetch("/send_message", {
                    method: "POST",
                    headers: {"Content-Type": "application/json"},
                    body: JSON.stringify({message: message})
                });
                const data = await response.json();
                activeRequestId = data.request_id;
                pollResponse();
            }
        });

        async function pollResponse() {
            const response = await fetch(`/check_response/${activeRequestId}`);
            const data = await response.json();

            if (data.status === 'ready') {
                if (data.response.type === 'message') {
                    $('.thinking').last().remove();
                    appendMessage('assistant', data.response.content);
                } else if (data.response.type === 'error') {
                    $('.thinking').last().remove();
                    appendMessage('assistant', data.response.content);
                }
            } else {
                setTimeout(pollResponse, 500);
            }
        }

        async function pollImageResponse() {
            const response = await fetch(`/check_image/${activeImageRequestId}`);
            const data = await response.json();

            if (data.status === 'ready') {
                $('.thinking').last().remove();
                if (data.response.type === 'image') {
                    appendMessage('assistant', data.response.content, true);
                } else {
                    appendMessage('assistant', data.response.content);
                }
            } else {
                setTimeout(pollImageResponse, 500);
            }
        }

        $('#model-select').change(async function() {
            await fetch("/change_model", {
                method: "POST",
                headers: {"Content-Type": "application/json"},
                body: JSON.stringify({model: this.value})
            });
            appendMessage('system', `Model changed to ${this.value}`);
        });

        // Enter key handling
        $('#message-input').keypress(function(e) {
            if (e.which === 13 && !e.shiftKey) {
                e.preventDefault();
                $('#send-button').click();
            }
        });

        // Load chat history
        $(document).ready(function() {
            fetch('/get_history')
                .then(response => response.json())
                .then(messages => {
                    messages.forEach(msg => {
                        const isImage = msg.content.replace(/^(\<p\>)/,"").startsWith('image_') && msg.role === 'assistant';
                        if (isImage) {
                            appendMessage(msg.role, msg.content.replace(/^(\<p\>)/,"").replace(/(\<\/p\>)$/,""), isImage);
                        } else {
                            appendMessage(msg.role, msg.content, isImage);
                        }
                    });
                });
        });
    </script>
}